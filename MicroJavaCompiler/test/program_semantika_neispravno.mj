

program P


const int a='e'; //ne poklapanje tipa i vrednosti dodele
const char b=5;

int d;
char e;

int x[];
char y[];


class A {

int al;
char bl;
int d;
{

void metodaA()
int h;
{



}


}
}


class B extends F{ //F nije klasa programa
int cl;
char dl;

{

void metodaB()
{


}



}


}

abstract class C{

{


abstract void metoda();

}


}

A klasaA;

B klasaB;
C klasaC;

int a;
{

int funkicja()
{


//mora imati return int;



}

void main()

int z[];
int p,q,r;
int a;
char t;

nijeTip greska; //Type mora biti tip

{


klasaC=new C;


a=t; //nisu kompatabilni tipovi



y[1]=y;

y=y[1];

y[1]=y[1];



y[1]=x[1];

y[y[1]]=a;

t++;
t--;
y[1]--;
y[1]--;

t=-t;

a=t+a;
a=t*a;

a=a*t;

x=new int[x[1]+a+x[1]+t]; //ne moze char t u new []


x=new char[a]; //x je niz int

qrst=5;

}


}
