
program p

const int a=5,b=7,c=8;
const int d=9;
const char e='e';

int niz[];
int niz1[];



class A {
int a,b;
int c;

{

char metodaA()
int a;
{


return  e;

}




}

}



class B extends A{

int a;
{



}


}


abstract class C {

int a;


{
void metodaC(){

}

abstract int metodaH(int a);


}



}


A klasaA;
B klasaB;
C klasaC;

  {
  
  
  
  
  
  
  int funkcija(int a)
  int niz2[];
  int b;
 char niz5[];
  char q;
  
  {
  
  
  
  return niz[1]+b;
  }
  
  
 
  void main() 
 
 int a;
 int b;
 char d;
 char e,f;
 
 char niz3[];
 int niz2[];
 
      { 
 
 
b=((b+b-b*a)-(a+a+a)+b+1+b+b*b-b);
 
niz1[b+1*b+(1-1+b)]=2+2+b+niz1[1+2+3+4]+1;

niz=new int[niz1[1]+2+2+niz1[1+2+3+4]+b+niz1[1+2+3+4]+niz[1]];
 
 
niz[1+1+1*(a+b)/a*(a+((a-b/a))*a)]=niz[1]+niz[1];
 
 
 niz=new int[a+niz[1]+b+niz[niz[1]+1+b+1+b+niz2[niz[1]+b+2+3]]+3+4+5+niz[1]];
 
niz=new int[niz[niz[niz[a]]]];

klasaA=new A;

niz3=new char[1];
 
 
 niz=new int[1];
 
niz[niz[1+1+2+niz[niz[1]+1]+3+b]+3+b+niz[2]+b+3+niz[1]]=niz[1]+b+niz[1+1+1+niz2[niz[1]+1+2+3]]+3+4+5;

niz[niz[niz[a+1]]]=niz[1]+b+niz[1+1+1+niz2[1+2+3]+niz[1]]+3;  
 

niz[1]=b;

b=funkcija();


b=niz[1];



niz3[1+2+2]=d;


d=niz3[1+1+1];
 
 klasaA=klasaA;

 
 
niz2[1]=niz2[niz2[1]];
 
 
d=niz3[1+1];


niz[3]=niz2[niz[niz[1+8+2/b+a*(a+a)]+a+a*a/1]+a*(a+a+a)]+niz[1+2+niz[1]];

d=d;
 
 d=niz3[niz[2]];
 
 return;
 
 }





 }
